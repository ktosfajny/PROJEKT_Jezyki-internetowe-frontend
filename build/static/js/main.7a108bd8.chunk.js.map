{"version":3,"sources":["images/netrunner.png","components/Background.js","components/Header.js","components/Infobox.js","components/RightSubtitleBox.js","components/CybershapeNeon.js","components/CaptainTtitle.js","components/CaptainImage.js","components/AboutMe.js","components/MainFetchButton.js","components/AnswerOption.js","components/CharacterImage.js","components/QuestionHolder.js","components/Recruit.js","App.js","index.js"],"names":["module","exports","Background","className","Header","Infobox","props","title","message","RightSubtitleBox","CybershapeNeon","type","CaptainTtitle","CaptainImage","src","image","alt","AboutMe","state","message1","message2","letterIndex1","letterIndex2","intervalsAreSet","interval","interval2","text","text1","text2","showNextLetter","messageNR","newMessage1","setState","newMessage2","document","querySelectorAll","window","addEventListener","pageYOffset","querySelector","clientHeight","TweenMax","to","width","setTimeout","setInterval","bind","this","length","clearInterval","netrunner","React","Component","MainFetchButton","onClick","click","AnswerOption","answerInfo","colorClass","CharacterImage","character","QuestionHolder","questionNR","questionInfo","Recruit","nextQuestionNR","currentState","answerInfo1","answerInfo2","answerInfo3","answerInfo4","showCharacterImage","mainButtonIsClicked","spansAreNotVisible","handleFadingBeforeResult","data","recruitAnswers","questionSpans","forEach","answer","opacity","questionSpan","fillQuestionElements","delay","characterImage","handleFetchData","buttonNR","stats","stat","statIndex","fetch","method","body","JSON","stringify","headers","then","res","ok","console","log","json","result","handleMainButtonClick","e","actionBtn","target","classList","add","top","display","questionsBox","handleFetchNextQuestion","name","info","showAnswers","question","spansVisible","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7a108bd8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/netrunner.13901a4c.png\";","import React from 'react';\r\nimport '../sass/Background.scss'\r\n\r\n\r\nconst Background = () => {\r\n    return (\r\n        <>\r\n            <div className=\"background__star background__star--1\"></div>\r\n            <div className=\"background__star background__star--2\"></div>\r\n            <div className=\"background__star background__star--3\"></div>\r\n            <div className=\"background__star background__star--4\"></div>\r\n            <div className=\"background__star background__star--5\"></div>\r\n            <div className=\"background__star background__star--6\"></div>\r\n            <div className=\"background__star background__star--7\"></div>\r\n            <div className=\"background__star background__star--8\"></div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Background;","import React from 'react';\r\nimport '../sass/header.scss'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <h1 className=\"header__title\">FUTURE IS <span className=\"header__neon\">NOW</span></h1>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../sass/InfoBox.scss'\r\n\r\n\r\nconst Infobox = (props) => {\r\n\r\n    return (\r\n        <div className='aboutme__info-box'>\r\n            <h3 className='aboutme__info-title'>{props.title}</h3>\r\n            <p className='aboutme__info'>{props.message}<span className='aboutme__cursor'>|</span>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Infobox;","import React from 'react';\r\nimport '../sass/RightSubtitleBox.scss'\r\nconst RightSubtitleBox = (props) => {\r\n\r\n    return (\r\n        <div className='aboutme__right-subtitle-box'><span className='aboutme__right-subtitle'>{props.title}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default RightSubtitleBox\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst CybershapeNeon = (props) => {\r\n\r\n    return (\r\n        <span className={`aboutme__cybershape-neon-${props.type}`}></span>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default CybershapeNeon;\r\n\r\n\r\n","import React from 'react';\r\nimport '../sass/CaptainTtitle.scss'\r\n\r\nconst CaptainTtitle = (props) => {\r\n\r\n    return (\r\n        <div className=\"aboutme__title-wrap\">\r\n            <h2 className=\"aboutme__title\">Architect <span className=\"aboutme__span\"></span></h2>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default CaptainTtitle","import React from 'react';\r\nimport '../sass/CaptainImage.scss'\r\n\r\nconst CaptainImage = (props) => {\r\n\r\n    return (\r\n        <div className=\"aboutme__imageDiv\">\r\n            <img className=\"aboutme__image\" src={props.image} alt=\"architect pic\" />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default CaptainImage\r\n\r\n","import React from 'react';\r\nimport '../sass/aboutme.scss'\r\nimport netrunner from '../images/netrunner.png'\r\nimport { TweenMax } from 'gsap'\r\n\r\nimport Infobox from './Infobox'\r\nimport RightSubtitleBox from './RightSubtitleBox'\r\nimport CybershapeNeon from './CybershapeNeon'\r\nimport CaptainTtitle from './CaptainTtitle';\r\nimport CaptainImage from './CaptainImage'\r\n\r\n\r\nclass AboutMe extends React.Component {\r\n\r\n    state = {\r\n        message1: '',\r\n        message2: '',\r\n        letterIndex1: 0,\r\n        letterIndex2: 0,\r\n        intervalsAreSet: false\r\n    }\r\n    interval = '';\r\n    interval2 = '';\r\n\r\n\r\n    text = {\r\n        text1: `The are many galactic races in our galaxy: Grey alien, Reptilians, Energy beeing, Pleiades and so on. In order to be in good relations with each other race, we need to present ourselves as great, strong and willful beeings. So if you feel you are fitting us, let us know!`,\r\n        text2: `Bio-mechanics, Net-runners, Hardware Mechanics, Smart ones and everyone who feel capable to handle cosmic tasks! Take the test and check if you are the one we are looking for!`\r\n    }\r\n\r\n\r\n\r\n    showNextLetter = (messageNR) => {\r\n\r\n        if (messageNR === 1) {\r\n            const { message1, letterIndex1 } = this.state\r\n            const { text1 } = this.text\r\n\r\n            let newMessage1 = message1;\r\n\r\n            this.setState({\r\n                message1: newMessage1 += text1[letterIndex1],\r\n                letterIndex1: letterIndex1 + 1\r\n            })\r\n        }\r\n\r\n        else {\r\n            const { message2, letterIndex2 } = this.state\r\n            const { text2, } = this.text\r\n\r\n            let newMessage2 = message2;\r\n\r\n            this.setState({\r\n                message2: newMessage2 += text2[letterIndex2],\r\n                letterIndex2: letterIndex2 + 1\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        const message = document.querySelectorAll('.aboutme__info')\r\n\r\n        window.addEventListener('scroll', () => {\r\n\r\n            const offset = window.pageYOffset\r\n            const aboutMeOffset = document.querySelector('.header').clientHeight;\r\n\r\n            if (offset > aboutMeOffset * 0.7 && !this.state.intervalsAreSet) {\r\n\r\n\r\n                TweenMax.to(message, 1, {\r\n                    width: '100%'\r\n                })\r\n\r\n                setTimeout(() => {\r\n                    this.interval = setInterval(this.showNextLetter.bind(this, 1), 80)\r\n                    this.interval2 = setInterval(this.showNextLetter.bind(this, 2), 80)\r\n\r\n                }, 1000)\r\n\r\n                this.setState({\r\n                    intervalsAreSet: true,\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { letterIndex1, letterIndex2 } = this.state\r\n        const { text1, text2 } = this.text\r\n\r\n        if (letterIndex1 >= text1.length - 1) {\r\n            clearInterval(this.interval)\r\n        }\r\n\r\n        if (letterIndex2 >= text2.length) {\r\n            clearInterval(this.interval2)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n        clearInterval(this.interval2)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"aboutme__wrapper\">\r\n\r\n                    <div className=\"aboutme__right-titles\">\r\n\r\n                        <RightSubtitleBox title='History' />\r\n\r\n                        <RightSubtitleBox title='Mission Data' />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"aboutme__cybershape\">\r\n\r\n                        <CybershapeNeon\r\n                            type='top'\r\n                        />\r\n                        <CybershapeNeon\r\n                            type='right'\r\n                        />\r\n\r\n                        <div className=\"aboutme__ls\">\r\n\r\n                            <CaptainTtitle />\r\n\r\n                            <CaptainImage image={netrunner} />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"aboutme__rs\">\r\n\r\n                            <Infobox\r\n                                title='WE NEED YOUR HELP'\r\n                                message={this.state.message1}\r\n                            />\r\n\r\n                            <Infobox\r\n                                title='WHO WE NEED?'\r\n                                message={this.state.message2}\r\n                            />\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AboutMe;","import React from 'react';\r\nimport '../sass/MainFetchButton.scss'\r\n\r\nconst MainFetchButton = (props) => {\r\n\r\n    return (\r\n        <div className=\"recruit__btn\" onClick={props.click}>\r\n            <span className=\"recruit__btn-span\"></span>\r\n            <span className=\"recruit__btn-span\"></span>\r\n            <span className=\"recruit__btn-span\"></span>\r\n            <span className=\"recruit__btn-span\"></span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MainFetchButton\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport '../sass/AnswerOption.scss'\r\n\r\nconst AnswerOption = (props) => {\r\n\r\n    return (\r\n        <div className=\"recruit__answer\">\r\n            <div className=\"recruit__answerInfo\">\r\n                {props.answerInfo}\r\n            </div>\r\n            <button className={`recruit__option-btn recruit__option-btn--${props.colorClass}`} onClick={props.click}>\r\n                Choose\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default AnswerOption\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst CharacterImage = (props) => {\r\n\r\n    return (\r\n        <img className=\"recruit__characterImage\" src={`http://localhost:5000/api/${props.character}`} alt=\"character\" />\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default CharacterImage\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport '../sass/QuestionHolder.scss'\r\n\r\n\r\nconst QuestionHolder = (props) => {\r\n\r\n    return (\r\n        <div className=\"recruit__questionHolder\">\r\n            <h3 className=\"recruit__questionNR\" ><span >{props.questionNR}</span></h3>\r\n            <p className=\"recruit__questionInfo\" ><span >{props.questionInfo}</span></p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default QuestionHolder;","import React from 'react';\r\nimport '../sass/recruit.scss'\r\nimport { TweenMax } from 'gsap'\r\n\r\nimport MainFetchButton from './MainFetchButton'\r\nimport AnswerOption from './AnswerOption'\r\nimport CharacterImage from './CharacterImage'\r\nimport QuestionHolder from './QuestionHolder'\r\n\r\n\r\nclass Recruit extends React.Component {\r\n\r\n    nextQuestionNR = 0;\r\n    currentState = [0, 0, 0, 0];\r\n\r\n    state = {\r\n        questionNR: '',\r\n        questionInfo: '',\r\n        answerInfo1: '',\r\n        answerInfo2: '',\r\n        answerInfo3: '',\r\n        answerInfo4: '',\r\n        showCharacterImage: false,\r\n        character: '',\r\n        mainButtonIsClicked: false,\r\n        spansAreNotVisible: false,\r\n    }\r\n\r\n\r\n\r\n\r\n    //ta funkcja jedynie wypełnia pola z pytaniami zdobytymi pytaniami\r\n    fillQuestionElements(data, type) {\r\n\r\n        if (!data.result) {\r\n            const { questionNR, questionInfo, answerInfo } = data.question\r\n\r\n            this.setState({\r\n                questionNR,\r\n                questionInfo,\r\n                answerInfo1: answerInfo[0],\r\n                answerInfo2: answerInfo[1],\r\n                answerInfo3: answerInfo[2],\r\n                answerInfo4: answerInfo[3],\r\n                showAnswers: true,\r\n            })\r\n\r\n        } else {\r\n            const { name, info } = data.character\r\n            if (type === 1) {\r\n                this.setState({\r\n                    questionNR: name,\r\n                    questionInfo: info,\r\n                })\r\n            } else if (type === 2) {\r\n\r\n                this.setState({\r\n                    showAnswers: false,\r\n                    showCharacterImage: true,\r\n                    character: name,\r\n                    spansAreNotVisible: true,\r\n                })\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n    handleFadingBeforeResult = (data) => {\r\n        const recruitAnswers = document.querySelectorAll('.recruit__answer');\r\n        const questionSpans = document.querySelectorAll('.recruit__questionHolder span')\r\n\r\n        recruitAnswers.forEach(answer => {\r\n            TweenMax.to(answer, 1, {\r\n                opacity: 0,\r\n\r\n            })\r\n        })\r\n\r\n        questionSpans.forEach(questionSpan => {\r\n            TweenMax.to(questionSpan, 1, {\r\n                opacity: 0,\r\n\r\n            })\r\n        })\r\n\r\n        // 3 razy używam setTimeout bo nie mogłem zapanować nad wykonaniem się tych fragmentó kodu w odpowiedniej kolejności\r\n        setTimeout(() => {\r\n            this.fillQuestionElements(data, 2)\r\n        }, 1000)\r\n\r\n\r\n        setTimeout(() => {\r\n            this.fillQuestionElements(data, 1)\r\n        }, 1001)\r\n\r\n        setTimeout(() => {\r\n            questionSpans.forEach(questionSpan => {\r\n                TweenMax.to(questionSpan, 2, {\r\n                    delay: 1,\r\n                    opacity: 1,\r\n                })\r\n            })\r\n\r\n            const characterImage = document.querySelector('.recruit__characterImage')\r\n            TweenMax.to(characterImage, 2, {\r\n                delay: 1,\r\n                opacity: 1,\r\n            })\r\n        }, 1002)\r\n    }\r\n\r\n\r\n    //ta funkcja fetchuje dane i jeśli się uda je zdobyć to wywołuje funkcje uzupełniającą pola z pytaniami\r\n    handleFetchData = (buttonNR) => {\r\n\r\n        const stats = this.currentState\r\n\r\n        stats.forEach((stat, statIndex) => {\r\n            if (statIndex + 1 === buttonNR) {\r\n                stats[statIndex]++;\r\n            }\r\n        })\r\n\r\n        fetch('http://localhost:5000/api/question', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                nextQuestionNR: this.nextQuestionNR,\r\n                stats,\r\n            }), headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res\r\n                }\r\n                else {\r\n                    return console.log('something went wrong!')\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n\r\n                if (data.result) {\r\n                    this.handleFadingBeforeResult(data)\r\n                } else {\r\n                    this.fillQuestionElements(data)\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    //ta funkcja obsługuje animację buttona, pojawienie się panelu z pytaniami oraz wywołuje funkcję fetch\r\n    handleMainButtonClick = (e) => {\r\n\r\n        this.handleFetchData()\r\n\r\n        const actionBtn = e.target;\r\n\r\n        if (!this.state.mainButtonIsClicked) {\r\n            actionBtn.classList.add('clicked')\r\n\r\n            this.setState({\r\n                mainButtonIsClicked: true,\r\n            })\r\n        }\r\n\r\n        TweenMax.to(actionBtn, 2, {\r\n            top: '20%',\r\n        })\r\n\r\n        TweenMax.to(actionBtn, 2, {\r\n            display: 'none',\r\n            opacity: 0\r\n        })\r\n\r\n        const questionsBox = document.querySelector('.recruit__questionsBox')\r\n        TweenMax.to(questionsBox, 1, {\r\n            delay: 3,\r\n            display: 'block',\r\n            opacity: 1\r\n        })\r\n    }\r\n\r\n    // ta funkcja obsługuje pobranie kolejnego pytania poprzez jeśli kliknęło się na któryś z kolorowych buttonów\r\n    handleFetchNextQuestion = (buttonNR) => {\r\n        this.nextQuestionNR++;\r\n        this.handleFetchData(buttonNR)\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { questionNR, questionInfo, answerInfo1, answerInfo2, answerInfo3, answerInfo4, showAnswers, showCharacterImage, character, spansAreNotVisible } = this.state\r\n\r\n        return (\r\n            <>\r\n                <div className=\"recruit__wrapper\">\r\n\r\n                    <MainFetchButton click={this.handleMainButtonClick} />\r\n\r\n                    <div className=\"recruit__questionsBox\">\r\n                        <div className=\"recruit__cybershape\">\r\n\r\n                            <div className=\"recruit__ls\">\r\n                                <QuestionHolder spansVisible={spansAreNotVisible} questionNR={questionNR} questionInfo={questionInfo} />\r\n                            </div>\r\n\r\n                            <div className=\"recruit__rs\">\r\n                                <div className=\"recruit__answersHolder\">\r\n\r\n                                    {showCharacterImage && <CharacterImage character={character} />}\r\n\r\n                                    {showAnswers && <AnswerOption\r\n                                        answerInfo={answerInfo1}\r\n                                        click={() => this.handleFetchNextQuestion(1)}\r\n                                        colorClass=\"blue\"\r\n                                    />}\r\n\r\n                                    {showAnswers && <AnswerOption\r\n                                        answerInfo={answerInfo2}\r\n                                        click={() => this.handleFetchNextQuestion(2)}\r\n                                        colorClass=\"green\"\r\n                                    />}\r\n\r\n                                    {showAnswers && <AnswerOption\r\n                                        answerInfo={answerInfo3}\r\n                                        click={() => this.handleFetchNextQuestion(3)}\r\n                                        colorClass=\"yellow\"\r\n                                    />}\r\n\r\n                                    {showAnswers && <AnswerOption\r\n                                        answerInfo={answerInfo4}\r\n                                        click={() => this.handleFetchNextQuestion(4)}\r\n                                        colorClass=\"red\"\r\n                                    />}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Recruit;","import React from 'react';\r\nimport './App.scss';\r\n\r\nimport Background from './components/Background'\r\nimport Header from './components/Header'\r\nimport AboutMe from './components/AboutMe'\r\nimport Recruit from './components/Recruit'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <section className=\"background\">\r\n        <Background />\r\n      </section>\r\n\r\n      <header className=\"header\">\r\n        <Header />\r\n      </header>\r\n\r\n      <section className=\"aboutme\">\r\n        <AboutMe />\r\n      </section>\r\n\r\n      <section className=\"recruit\">\r\n        <Recruit />\r\n      </section>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}